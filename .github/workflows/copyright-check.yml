# Copyright Header Check
# This workflow ensures all source files have proper copyright headers

name: Copyright Header Check

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [develop, master, main]
  push:
    branches: [develop, master, main]

jobs:
  copyright-check:
    runs-on: ubuntu-latest
    # Skip if:
    # 1. PR is from github-actions bot (prevent infinite loops)
    # 2. This is the Copyright/CopyrightAdder repo itself
    # 3. PR is from a copyright-headers branch (prevent infinite loops)
    # 4. PR author is any bot (contains [bot] in username)
    if: |
      github.actor != 'github-actions[bot]' && 
      github.actor != 'dependabot[bot]' &&
      github.repository != 'roku674/Copyright' &&
      github.repository != 'roku674/CopyrightAdder' &&
      !startsWith(github.head_ref, 'copyright-headers/') &&
      !contains(github.event.pull_request.user.login, '[bot]')
    permissions:
      contents: write
      pull-requests: write
      actions: write
    
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive
      
      - name: Configure Git Identity
        run: |
          # Configure git with a safe default identity for the workflow
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          echo "Git identity configured for workflow operations"
      
      - name: Setup Copyright Adder
        run: |
          # Initialize submodules if not already done
          git submodule update --init --recursive
          
          # Check if CopyrightAdder exists as submodule, otherwise download
          if [ -f "CopyrightAdder/add_copyright_headers.sh" ]; then
            echo "Using existing CopyrightAdder submodule"
            chmod +x CopyrightAdder/add_copyright_headers.sh
          elif [ -f "Copyright/CopyrightAdder/add_copyright_headers.sh" ]; then
            echo "Using existing Copyright/CopyrightAdder submodule"
            chmod +x Copyright/CopyrightAdder/add_copyright_headers.sh
          else
            echo "Downloading CopyrightAdder as fallback"
            mkdir -p CopyrightAdder
            
            # Download with verbose error checking
            echo "Downloading from: https://raw.githubusercontent.com/roku674/CopyrightAdder/refs/heads/master/add_copyright_headers.sh"
            if ! curl -sSL https://raw.githubusercontent.com/roku674/CopyrightAdder/refs/heads/master/add_copyright_headers.sh -o CopyrightAdder/add_copyright_headers.sh; then
              echo "Failed to download add_copyright_headers.sh"
              # Check what we got
              head -n 5 CopyrightAdder/add_copyright_headers.sh
              exit 1
            fi
            
            # Verify the downloaded file is a shell script
            if ! head -n 1 CopyrightAdder/add_copyright_headers.sh | grep -q "^#" ; then
              echo "Downloaded file does not appear to be a shell script. First few lines:"
              head -n 5 CopyrightAdder/add_copyright_headers.sh
              exit 1
            fi
            
            # Use local sources.txt if available, otherwise download
            if [ ! -f "sources.txt" ]; then
              curl -sSL https://raw.githubusercontent.com/roku674/CopyrightAdder/refs/heads/master/sources.txt -o sources.txt
            fi
            chmod +x CopyrightAdder/add_copyright_headers.sh
          fi
      
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: |
            **/*.{java,js,ts,jsx,tsx,cpp,cc,c,h,cs,py,go,rs,rb,php,sh,xml,html,sql}
          files_ignore: |
            CopyrightAdder/**
            Copyright/**
            .github/**
      
      - name: Run Copyright Adder on changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          echo "Adding copyright headers to changed files..."
          
          # Determine script path based on submodule structure
          if [ -f "CopyrightAdder/add_copyright_headers.sh" ]; then
            SCRIPT_PATH="./CopyrightAdder/add_copyright_headers.sh"
          elif [ -f "Copyright/CopyrightAdder/add_copyright_headers.sh" ]; then
            SCRIPT_PATH="./Copyright/CopyrightAdder/add_copyright_headers.sh"
          else
            echo "Error: Could not find CopyrightAdder script"
            exit 1
          fi
          
          for file in $CHANGED_FILES; do
            if [ -f "$file" ]; then
              echo "Processing: $file"
              $SCRIPT_PATH "$file"
            fi
          done
      
      - name: Clean up downloaded script files
        run: |
          # Remove downloaded script files to prevent them from being committed
          if [ -f "CopyrightAdder/add_copyright_headers.sh" ] && [ ! -d "CopyrightAdder/.git" ]; then
            echo "Removing downloaded script files"
            rm -f CopyrightAdder/add_copyright_headers.sh
            rm -f sources.txt
            # Remove the directory if it's empty and was created by us
            if [ -d "CopyrightAdder" ] && [ -z "$(ls -A CopyrightAdder)" ]; then
              rmdir CopyrightAdder
            fi
          fi
      
      - name: Check for changes
        id: check-changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Files missing copyright headers were found and updated."
            
            # List changed files for the PR description
            echo "changed_files<<EOF" >> $GITHUB_OUTPUT
            git status --porcelain | grep -E "^\s*M" | cut -c 4-
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "All files have proper copyright headers."
          fi
      
      
      - name: Create new branch for copyright headers
        if: steps.check-changes.outputs.changes == 'true'
        id: create-branch
        run: |
          # Generate unique branch name
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          NEW_BRANCH="copyright-headers/${{ github.head_ref }}-${TIMESTAMP}"
          echo "branch_name=${NEW_BRANCH}" >> $GITHUB_OUTPUT
          
          # Create and checkout new branch
          git checkout -b "${NEW_BRANCH}"
          
          # Commit changes
          git add -A
          
          # Commit copyright header changes
          git commit -m "Add copyright headers to source files"
          
          # Push the new branch
          git push origin "${NEW_BRANCH}"
      
      - name: Create Pull Request
        if: steps.check-changes.outputs.changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = '${{ steps.create-branch.outputs.branch_name }}';
            const baseBranch = '${{ github.head_ref }}';
            const changedFiles = `${{ steps.check-changes.outputs.changed_files }}`;
            
            // First check for existing open PRs from copyright-headers/* branches to the same base branch
            const existingPRs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              base: baseBranch
            });
            
            // Look for existing copyright PRs targeting the same branch
            const existingCopyrightPRs = existingPRs.data.filter(pr => 
              pr.head.ref.startsWith('copyright-headers/') && 
              pr.base.ref === baseBranch &&
              pr.labels.some(label => label.name === 'copyright')
            );
            
            if (existingCopyrightPRs.length > 0) {
              console.log(`Found ${existingCopyrightPRs.length} existing copyright PR(s) for branch ${baseBranch}`);
              
              // Close all existing copyright PRs for this branch
              for (const pr of existingCopyrightPRs) {
                console.log(`Closing existing PR #${pr.number} (${pr.head.ref})`);
                
                // Add closing comment
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  body: `üîÑ **Superseded by new copyright check**\n\nThis PR is being closed because a new copyright check has been triggered. A fresh PR will be created with the latest changes.`
                });
                
                // Close the PR
                await github.rest.pulls.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: pr.number,
                  state: 'closed'
                });
                
                // Delete the branch if possible
                try {
                  await github.rest.git.deleteRef({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    ref: `heads/${pr.head.ref}`
                  });
                  console.log(`Deleted branch ${pr.head.ref}`);
                } catch (error) {
                  console.log(`Could not delete branch ${pr.head.ref}: ${error.message}`);
                }
              }
            }
            
            const prBody = `## üìÑ Copyright Headers Added
            
            This automated pull request adds missing copyright headers to source files in the \`${baseBranch}\` branch.
            
            ### üìù Changed Files:
            \`\`\`
            ${changedFiles}
            \`\`\`
            
            ### ‚ÑπÔ∏è Notes:
            - ‚úÖ This PR was automatically generated by the Copyright Header Check workflow
            - üëÄ Please review the changes before merging
            - üéØ This PR targets the source branch \`${baseBranch}\`, not the base branch
            
            ---
            *ü§ñ Generated by GitHub Actions*  
            *üöÄ Created by [@roku674](https://github.com/roku674)*  
            *‚òï [Buy me a coffee](https://www.alexanderfields.me)*`;
            
            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `üìÑ Add copyright headers to ${baseBranch}`,
              body: prBody,
              head: branchName,
              base: baseBranch,
              labels: ['copyright', 'automated']
            });
            
            console.log(`Created PR #${pr.data.number}: ${pr.data.html_url}`);
            
            // Add comment to original PR
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `‚ö†Ô∏è **Missing Copyright Headers Detected**\n\nü§ñ I've created PR #${pr.data.number} to add missing copyright headers to your branch.\n\nüëÄ Please review and merge it into your branch before this PR can be merged.\n\n---\n*Automated by [@roku674](https://github.com/roku674)'s Copyright Header Check*  \n*‚òï [Buy me a coffee](https://www.alexanderfields.me)*`
            });
      
      - name: Delete workflow after merge
        if: |
          github.event_name == 'push' && 
          (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop') &&
          contains(github.event.head_commit.message, 'copyright')
        run: |
          echo "Detected copyright-related merge to main branch - deleting workflow"
          
          # Remove the workflow file
          if [ -f ".github/workflows/copyright-check.yml" ]; then
            git rm .github/workflows/copyright-check.yml
            git commit -m "Remove copyright check workflow after merge"
            git push origin ${{ github.ref_name }}
            echo "Copyright workflow has been removed after successful merge"
          fi
      
      - name: Clean up
        if: always()
        run: |
          rm -rf CopyrightAdder