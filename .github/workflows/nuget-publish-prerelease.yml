name: Publish Prerelease NuGet Packages

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  publish-prerelease:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Get branch name and commit SHA
        id: version-info
        run: |
          echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "BUILD_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Update versions for prerelease
        run: |
          # Add prerelease suffix to all project versions
          for project in MC.*/MandalaConsulting.*.csproj; do
            if [[ ! $project =~ \.Tests\. ]]; then
              # Get current version
              current_version=$(grep -o '<Version>[^<]*</Version>' "$project" | sed 's/<Version>\(.*\)<\/Version>/\1/')
              
              # Create prerelease version (e.g., 1.0.0-develop.123)
              new_version="${current_version}-develop.${{ env.BUILD_NUMBER }}"
              
              # Update version in project file
              sed -i "s/<Version>$current_version<\/Version>/<Version>$new_version<\/Version>/" "$project"
              
              echo "Updated $project to version $new_version"
            fi
          done

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Run tests
        run: dotnet test --no-build --configuration Release --verbosity normal

      - name: Find changed project files
        id: changed-projects
        uses: tj-actions/changed-files@v46
        with:
          files: |
            **/*.csproj
          files_ignore: |
            **/*.Tests.csproj
            **/*Test*.csproj

      - name: Pack and push changed projects
        if: steps.changed-projects.outputs.any_changed == 'true'
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          echo "Changed projects: ${{ steps.changed-projects.outputs.all_changed_files }}"
          
          for file in ${{ steps.changed-projects.outputs.all_changed_files }}; do
            if [[ $file == *Test* ]] || [[ $file == *.Tests.* ]]; then
              echo "Skipping test project: $file"
              continue
            fi
            
            echo "Packing $file..."
            dotnet pack "$file" --configuration Release --no-build --output ./nupkgs
          done
          
          # Push all packages
          for package in ./nupkgs/*.nupkg; do
            if [ -f "$package" ]; then
              echo "Publishing prerelease package: $package"
              dotnet nuget push "$package" --api-key "$NUGET_API_KEY" --source https://api.nuget.org/v3/index.json --skip-duplicate
            fi
          done

      - name: Upload packages as artifacts
        if: steps.changed-projects.outputs.any_changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: prerelease-packages
          path: ./nupkgs/*.nupkg
          retention-days: 7